@charset "UTF-8";
/**
 * color de base
 */
/**/
/**/
/**
 * Typography
 */
/**
 * typography
 */
/**
 * Lists buttons
 */
/* */
/* page-header-bg */
/* Permet de surcharger les variables bootstrap */
/**
 * Chargement progressif
 */
/**
 * Affichage de la langue.
 * Model simple.
 */
/**
 *
 */
/**
 * Card rotation
 */
/**
* translation on hover
*/
/**
* Before cover
*/
/**
* Before cover
*/
/**
 *  pas de retour Ã  la ligne
 */
/**
 *  Mixin for multiline limit text css
 */
/*!
 * .list-element{@include list-element(($paddingY:10px, $paddingX:5px, $borderW:1px));}
 */
/**
 *  Images area to preload,
 *  on ajoute sur la div contenant l'image
 */
/**
 *
 */
/**
 * Affet Ombre
 */
/**
 * Pricelist
 */
.hero-theme-farade .swiper-big-v2 .swiper-slide .swiper-image .cover-text {
  color: #fff;
}
.hero-theme-farade .swiper-big-v2 .swiper-slide .swiper-image .cover-text .sub_title {
  display: none;
}
.hero-theme-farade .swiper-big-v2 .swiper-slide .swiper-image .cover-text .title {
  color: #fff;
}

.teaser-cardsimple.basic {
  border: none;
}
.teaser-cardsimple.basic .card-body {
  padding-left: 0;
  padding-right: 0;
}
.teaser-cardsimple.card-img-big {
  border: none;
  margin-bottom: 4rem;
}
.teaser-cardsimple.card-img-big .card-body {
  margin-left: 15px;
  margin-right: 15px;
  background: #fff;
  margin-top: -5.5rem;
  box-shadow: 0px 2px 3px #a7a7a7;
}

/**
 * - comments-left
 */
.comments-left {
  position: relative;
  background-attachment: fixed;
}
.comments-left::before {
  content: "";
  background-color: rgba(22, 22, 22, 0.7);
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}
.comments-left .entete {
  background: transparent;
  text-align: center;
  color: #fff;
}

.product-teaser {
  box-shadow: 0px 2px 6px rgba(129, 129, 129, 0.21);
}
.product-teaser .field--name-quantity {
  display: none;
}
.product-teaser .field {
  display: flex;
}
.product-teaser .item {
  margin-bottom: 2rem;
  margin-left: 1.5rem;
  margin-right: 1.5rem;
}
.product-teaser .item .item-label {
  color: black;
}
.product-teaser .item .item-label::after {
  content: ":";
  display: inline-block;
  padding: 0 2px;
}
.product-teaser .image {
  position: relative;
  margin: 0;
  margin-bottom: 2rem;
}
.product-teaser .image::before {
  content: "";
  display: block;
  padding-bottom: 100%;
}
.product-teaser .image img {
  position: absolute;
  top: 50%;
  left: 50%;
  bottom: auto;
  max-height: 100%;
  width: auto;
  transform: translate(-50%, -50%);
}
.product-teaser .reference .item-content {
  font-weight: 500;
  color: #b358f7;
}
.product-teaser .price {
  font-size: 2.1rem;
  font-weight: 600;
  color: #b358f7;
}
.product-teaser .title {
  margin-bottom: 3rem;
  font-size: 1.68rem;
  font-weight: 500;
}
.product-teaser .title::after {
  content: "";
  margin-top: 1.6rem;
  background-color: #b358f7;
  display: block;
  margin-left: 0;
  margin-right: auto;
  width: 40px;
  height: 2px;
}
.product-teaser .title a {
  color: #4c4c4c;
}
.product-teaser .button .item-content {
  width: 100%;
}
.product-teaser .stock .field {
  justify-content: end;
}
.product-teaser .stock .item-content {
  display: flex;
  justify-content: end;
}
.product-teaser .stock .item-content *:first-child {
  padding-right: 5px;
}

.page-product-full .col {
  padding: 0;
}

.product-teaser {
  height: 100%;
  background: #fff;
  margin-bottom: 3rem;
}
.product-teaser i {
  padding-right: 1rem;
}
.product-teaser .item:last-child {
  margin-bottom: 0;
}
.product-teaser .title {
  height: 67px;
  overflow: hidden;
}
.product-teaser .title a {
  text-transform: lowercase;
}
.product-teaser form .field--widget-commerce-product-variation-attributes {
  display: none;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/