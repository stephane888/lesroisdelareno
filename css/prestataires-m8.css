@charset "UTF-8";
/**
 * color de base
 *
 * @format
 */
/**/
/**/
/**
 * Typography.
 */
/**
 * Typography.
 */
/**
 * Lists buttons
 */
/* */
/* page-header-bg */
/* Permet de surcharger les variables bootstrap */
/**
 * Chargement progressif
 */
/**
 * Affichage de la langue.
 * Model simple.
 */
/**
 *
 */
/**
 * Card rotation
 */
/**
* translation on hover
*/
/**
* Before cover
*/
/**
* Before cover
*/
/**
 *  pas de retour Ã  la ligne
 */
/**
 *  Mixin for multiline limit text css
 */
/*!
 * .list-element{@include list-element(($paddingY:10px, $paddingX:5px, $borderW:1px));}
 */
/**
 *  Images area to preload,
 *  on ajoute sur la div contenant l'image
 */
/**
 *
 */
/**
 * Affet Ombre
 */
/**
 * Pricelist
 */
.partenaire-service {
  background-color: #f3f3f3;
  padding-top: 4rem;
}
.partenaire-service .description.layout-region {
  margin-left: 2rem;
  margin-right: 2rem;
}
.partenaire-service .description.layout-region .node--view-mode-teaser {
  padding-right: 2rem;
  padding-left: 2rem;
}

.avis-theme-extra {
  position: relative;
}
.avis-theme-extra::before {
  content: "";
  background-color: rgba(234, 0, 13, 0.7);
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  position: absolute;
}
.avis-theme-extra .swiper-unique .swiper-slide {
  padding-top: calc(5rem + 45px);
  padding-bottom: 7rem;
}
.avis-theme-extra .swiper-unique .cover-text {
  margin-left: auto;
  margin-right: auto;
  max-width: 888px;
  padding: 2rem;
  background-color: #fff;
  color: #333;
}
@media only screen and (min-width: 1201px) {
  .avis-theme-extra .swiper-unique .cover-text {
    padding: 2.5rem;
  }
}
.avis-theme-extra .swiper-unique .cover-text .cover-img {
  position: absolute;
  left: 0;
  right: 0;
  top: -45px;
}
.avis-theme-extra .swiper-unique .cover-text .title {
  margin-top: 2rem;
  color: #ea000d;
  font-weight: 600;
}
.avis-theme-extra .swiper-unique .cover-text .description {
  margin-bottom: 0;
  font-size: 1.68rem;
}

/**
 * lesroisdelareno-blockcounter
 */
.lesroisdelareno-blockcounter {
  padding: 2.5rem 0;
  background-color: #dbdbdb;
}
.lesroisdelareno-blockcounter .owl-dots {
  display: none;
}
.lesroisdelareno-blockcounter img {
  -webkit-filter: grayscale(100%);
  filter: grayscale(100%);
  -webkit-transition: all 0.5s ease-out;
  transition: all 0.5s ease-out;
}
.lesroisdelareno-blockcounter .owl-item:hover img {
  filter: grayscale(0);
}

.teasers-architecte .teaser-cardsimple .card-title {
  font-size: 1.68rem;
}

.rc-web .swiper-big-v3 .swiper-slide .swiper-image .cover-text {
  font-size: 2.1rem;
  text-align: center;
  font-weight: 600;
  color: #4c4c4c;
  background-color: rgba(255, 255, 255, 0.001);
  padding: 2rem;
  max-width: 500px;
}
@media only screen and (min-width: 992px) {
  .rc-web .swiper-big-v3 .swiper-slide .swiper-image .cover-text {
    margin-right: 50px;
  }
}
.rc-web .swiper-big-v3 .swiper-slide .swiper-image .cover-text .sub_title {
  display: none;
}
.rc-web .swiper-big-v3 .swiper-slide .swiper-image .cover-text .title {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 2.24rem;
  letter-spacing: normal;
  text-shadow: none;
}
.rc-web .swiper-big-v3 .swiper-slide .swiper-image .cover-text .title img {
  max-width: 120px;
  margin-bottom: 2rem;
}
.rc-web .swiper-big-v3 .swiper-slide .swiper-image .cover-img img {
  transform: translateY(40%);
  margin-top: -40%;
  left: auto;
  right: 0;
}
.rc-web .swiper-big-v3 .swiper-slide.swiper-slide-active .cover-text {
  background-color: white;
}

.owl-rc-web {
  overflow: hidden;
  position: relative;
  width: 100%;
}
.owl-rc-web .owl-carousel {
  max-width: 1170px;
  margin-left: auto;
  margin-right: auto;
  position: unset;
}
.owl-rc-web .owl-stage-outer {
  padding-top: 1rem;
  padding-bottom: 2rem;
}
.owl-rc-web .owl-stage-outer .owl-item {
  transition-property: all;
  transition-duration: 0.5s;
  transition-timing-function: ease-in-out;
}
.owl-rc-web .owl-stage-outer .owl-item:hover {
  transform: translateY(-0.5rem);
  overflow: visible;
}
.owl-rc-web .owl-nav {
  margin: 0;
  padding: 0;
}
.owl-rc-web .owl-nav > button[class*=owl-] {
  position: absolute;
  margin: 0;
  border-radius: 5px;
  transition-property: all;
  transition-duration: 0.7s;
  transition-timing-function: ease-in-out;
  width: 8rem;
  height: 8rem;
  top: calc(50% - 30px);
  left: -4rem;
  right: auto;
  display: flex;
  align-items: center;
  background: transparent;
  color: #4c4c4c;
}
.owl-rc-web .owl-nav > button[class*=owl-] * {
  position: relative;
  z-index: 5;
  line-height: 100%;
  font-size: 4.2rem;
}
.owl-rc-web .owl-nav > button[class*=owl-]:hover {
  background: transparent;
  color: #fff;
}
.owl-rc-web .owl-nav > button[class*=owl-]::before {
  content: "";
  display: block;
  position: absolute;
  background-color: #ccc;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 0;
  transform: rotate(45deg);
  border-radius: 5px;
}
.owl-rc-web .owl-nav > button[class*=owl-].owl-next {
  left: auto;
  right: -4rem;
  padding-left: 1.6rem !important;
  margin-right: -5.6rem;
}
.owl-rc-web .owl-nav > button[class*=owl-].owl-prev {
  justify-content: flex-end;
  padding-right: 1.6rem !important;
  margin-left: -5.6rem;
}
.owl-rc-web .owl-dots .owl-dot.active span {
  background: transparent;
  border: 2px solid #ccc;
}
.owl-rc-web:hover .owl-nav > button[class*=owl-].owl-next {
  margin-right: 0;
}
.owl-rc-web:hover .owl-nav > button[class*=owl-].owl-next:hover::before {
  background: #c69c6d;
}
.owl-rc-web:hover .owl-nav > button[class*=owl-].owl-prev {
  margin-left: 0;
}
.owl-rc-web:hover .owl-nav > button[class*=owl-].owl-prev:hover::before {
  background: #c69c6d;
}

.domaine-service {
  margin: 0;
  padding-bottom: 10rem;
}
.domaine-service .card {
  color: #c5c5c5;
}
.domaine-service .owl-rc-web .owl-stage-outer {
  padding-bottom: 7rem;
}

.bg-theme {
  background-color: #130f13 !important;
  color: #c5c5c5;
}
.bg-theme .block__whoAreWe .h2Title {
  color: #fff;
}
.bg-theme .block__whoAreWe .h2Title span {
  color: #c69c6d;
}
.bg-theme.titre-section {
  padding-bottom: 10rem;
}
.bg-theme.titre-section .main {
  color: #fff;
  margin-bottom: 3rem;
}

.titre-section .main {
  color: #000;
}
.titre-section .main span {
  color: #c69c6d;
}
.titre-section .sub_title {
  font-size: 1.4rem;
  max-width: 980px;
  margin-left: auto;
  margin-right: auto;
}

.card {
  background: rgba(255, 255, 255, 0.07);
}

.avis-theme-extra::before {
  background-color: rgba(32, 32, 32, 0.88);
}
.avis-theme-extra .block-title {
  text-align: center;
  margin-top: 4rem;
  color: #fff;
}
.avis-theme-extra .block-title::before {
  display: none;
}
.avis-theme-extra .swiper-image .cover-text {
  padding-bottom: 0;
}
.avis-theme-extra .swiper-image .cover-text .description {
  padding-top: 1rem;
}

.partenaires .owl-carousel .owl-item {
  position: relative;
  padding-top: 150px;
  padding-left: 200px;
}
.partenaires .owl-carousel .owl-item img {
  max-width: 180px;
  max-height: 100%;
  width: auto;
  height: auto;
  position: absolute;
  left: 0;
  top: 0;
  transform: translateX(50%);
  margin-right: -50%;
}

.textcotebg {
  padding-top: 0;
}
.textcotebg .entete {
  background: rgba(255, 255, 255, 0.07);
}

.un-projet {
  padding-top: 10rem;
  padding-bottom: 10rem;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/